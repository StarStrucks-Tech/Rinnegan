// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.2
// source: simulator/simulator_service.proto

package simulator

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

// SimulatorServiceClient is the client API for SimulatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Define the service
type SimulatorServiceClient interface {
}

type simulatorServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSimulatorServiceClient(cc grpc.ClientConnInterface) SimulatorServiceClient {
	return &simulatorServiceClient{cc}
}

// SimulatorServiceServer is the server API for SimulatorService service.
// All implementations must embed UnimplementedSimulatorServiceServer
// for forward compatibility
//
// Define the service
type SimulatorServiceServer interface {
	mustEmbedUnimplementedSimulatorServiceServer()
}

// UnimplementedSimulatorServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSimulatorServiceServer struct {
}

func (UnimplementedSimulatorServiceServer) mustEmbedUnimplementedSimulatorServiceServer() {}

// UnsafeSimulatorServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SimulatorServiceServer will
// result in compilation errors.
type UnsafeSimulatorServiceServer interface {
	mustEmbedUnimplementedSimulatorServiceServer()
}

func RegisterSimulatorServiceServer(s grpc.ServiceRegistrar, srv SimulatorServiceServer) {
	s.RegisterService(&SimulatorService_ServiceDesc, srv)
}

// SimulatorService_ServiceDesc is the grpc.ServiceDesc for SimulatorService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SimulatorService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "simulator.SimulatorService",
	HandlerType: (*SimulatorServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "simulator/simulator_service.proto",
}
