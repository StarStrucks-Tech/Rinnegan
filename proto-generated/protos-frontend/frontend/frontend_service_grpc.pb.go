// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.2
// source: protos-frontend/frontend/frontend_service.proto

package frontend

import (
	generic "Rinnegan/proto-generated/protos-frontend/generic"
	onboarding "Rinnegan/proto-generated/protos-frontend/onboarding"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	FrontendService_TriggerPhoneVerification_FullMethodName    = "/frontend.FrontendService/TriggerPhoneVerification"
	FrontendService_TriggerPhoneOTPVerification_FullMethodName = "/frontend.FrontendService/TriggerPhoneOTPVerification"
	FrontendService_TriggerEmailVerification_FullMethodName    = "/frontend.FrontendService/TriggerEmailVerification"
	FrontendService_TriggerPanVerification_FullMethodName      = "/frontend.FrontendService/TriggerPanVerification"
	FrontendService_TriggerLivenessCheck_FullMethodName        = "/frontend.FrontendService/TriggerLivenessCheck"
	FrontendService_GetCurrentOnboardingStage_FullMethodName   = "/frontend.FrontendService/GetCurrentOnboardingStage"
	FrontendService_VerifyAadhar_FullMethodName                = "/frontend.FrontendService/VerifyAadhar"
)

// FrontendServiceClient is the client API for FrontendService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Define the service
type FrontendServiceClient interface {
	TriggerPhoneVerification(ctx context.Context, in *onboarding.TriggerPhoneOTPVerificationRequest, opts ...grpc.CallOption) (*onboarding.TriggerPhoneVerificationResponse, error)
	TriggerPhoneOTPVerification(ctx context.Context, in *onboarding.TriggerPhoneOTPVerificationRequest, opts ...grpc.CallOption) (*onboarding.TriggerPhoneOTPVerificationResponse, error)
	TriggerEmailVerification(ctx context.Context, in *onboarding.TriggerEmailVerificationRequest, opts ...grpc.CallOption) (*onboarding.TriggerEmailVerificationResponse, error)
	TriggerPanVerification(ctx context.Context, in *onboarding.TriggerPanVerificationRequest, opts ...grpc.CallOption) (*onboarding.TriggerPanVerificationResponse, error)
	TriggerLivenessCheck(ctx context.Context, in *onboarding.TriggerLivenessCheckRequest, opts ...grpc.CallOption) (*onboarding.TriggerLivenessCheckResponse, error)
	GetCurrentOnboardingStage(ctx context.Context, in *generic.EmptyRequest, opts ...grpc.CallOption) (*onboarding.GetCurrentOnboardingStageResponse, error)
	VerifyAadhar(ctx context.Context, in *onboarding.AadharVerificationRequest, opts ...grpc.CallOption) (*onboarding.AadharVerificationResponse, error)
}

type frontendServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFrontendServiceClient(cc grpc.ClientConnInterface) FrontendServiceClient {
	return &frontendServiceClient{cc}
}

func (c *frontendServiceClient) TriggerPhoneVerification(ctx context.Context, in *onboarding.TriggerPhoneOTPVerificationRequest, opts ...grpc.CallOption) (*onboarding.TriggerPhoneVerificationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(onboarding.TriggerPhoneVerificationResponse)
	err := c.cc.Invoke(ctx, FrontendService_TriggerPhoneVerification_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendServiceClient) TriggerPhoneOTPVerification(ctx context.Context, in *onboarding.TriggerPhoneOTPVerificationRequest, opts ...grpc.CallOption) (*onboarding.TriggerPhoneOTPVerificationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(onboarding.TriggerPhoneOTPVerificationResponse)
	err := c.cc.Invoke(ctx, FrontendService_TriggerPhoneOTPVerification_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendServiceClient) TriggerEmailVerification(ctx context.Context, in *onboarding.TriggerEmailVerificationRequest, opts ...grpc.CallOption) (*onboarding.TriggerEmailVerificationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(onboarding.TriggerEmailVerificationResponse)
	err := c.cc.Invoke(ctx, FrontendService_TriggerEmailVerification_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendServiceClient) TriggerPanVerification(ctx context.Context, in *onboarding.TriggerPanVerificationRequest, opts ...grpc.CallOption) (*onboarding.TriggerPanVerificationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(onboarding.TriggerPanVerificationResponse)
	err := c.cc.Invoke(ctx, FrontendService_TriggerPanVerification_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendServiceClient) TriggerLivenessCheck(ctx context.Context, in *onboarding.TriggerLivenessCheckRequest, opts ...grpc.CallOption) (*onboarding.TriggerLivenessCheckResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(onboarding.TriggerLivenessCheckResponse)
	err := c.cc.Invoke(ctx, FrontendService_TriggerLivenessCheck_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendServiceClient) GetCurrentOnboardingStage(ctx context.Context, in *generic.EmptyRequest, opts ...grpc.CallOption) (*onboarding.GetCurrentOnboardingStageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(onboarding.GetCurrentOnboardingStageResponse)
	err := c.cc.Invoke(ctx, FrontendService_GetCurrentOnboardingStage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendServiceClient) VerifyAadhar(ctx context.Context, in *onboarding.AadharVerificationRequest, opts ...grpc.CallOption) (*onboarding.AadharVerificationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(onboarding.AadharVerificationResponse)
	err := c.cc.Invoke(ctx, FrontendService_VerifyAadhar_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FrontendServiceServer is the server API for FrontendService service.
// All implementations must embed UnimplementedFrontendServiceServer
// for forward compatibility
//
// Define the service
type FrontendServiceServer interface {
	TriggerPhoneVerification(context.Context, *onboarding.TriggerPhoneOTPVerificationRequest) (*onboarding.TriggerPhoneVerificationResponse, error)
	TriggerPhoneOTPVerification(context.Context, *onboarding.TriggerPhoneOTPVerificationRequest) (*onboarding.TriggerPhoneOTPVerificationResponse, error)
	TriggerEmailVerification(context.Context, *onboarding.TriggerEmailVerificationRequest) (*onboarding.TriggerEmailVerificationResponse, error)
	TriggerPanVerification(context.Context, *onboarding.TriggerPanVerificationRequest) (*onboarding.TriggerPanVerificationResponse, error)
	TriggerLivenessCheck(context.Context, *onboarding.TriggerLivenessCheckRequest) (*onboarding.TriggerLivenessCheckResponse, error)
	GetCurrentOnboardingStage(context.Context, *generic.EmptyRequest) (*onboarding.GetCurrentOnboardingStageResponse, error)
	VerifyAadhar(context.Context, *onboarding.AadharVerificationRequest) (*onboarding.AadharVerificationResponse, error)
	mustEmbedUnimplementedFrontendServiceServer()
}

// UnimplementedFrontendServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFrontendServiceServer struct {
}

func (UnimplementedFrontendServiceServer) TriggerPhoneVerification(context.Context, *onboarding.TriggerPhoneOTPVerificationRequest) (*onboarding.TriggerPhoneVerificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TriggerPhoneVerification not implemented")
}
func (UnimplementedFrontendServiceServer) TriggerPhoneOTPVerification(context.Context, *onboarding.TriggerPhoneOTPVerificationRequest) (*onboarding.TriggerPhoneOTPVerificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TriggerPhoneOTPVerification not implemented")
}
func (UnimplementedFrontendServiceServer) TriggerEmailVerification(context.Context, *onboarding.TriggerEmailVerificationRequest) (*onboarding.TriggerEmailVerificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TriggerEmailVerification not implemented")
}
func (UnimplementedFrontendServiceServer) TriggerPanVerification(context.Context, *onboarding.TriggerPanVerificationRequest) (*onboarding.TriggerPanVerificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TriggerPanVerification not implemented")
}
func (UnimplementedFrontendServiceServer) TriggerLivenessCheck(context.Context, *onboarding.TriggerLivenessCheckRequest) (*onboarding.TriggerLivenessCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TriggerLivenessCheck not implemented")
}
func (UnimplementedFrontendServiceServer) GetCurrentOnboardingStage(context.Context, *generic.EmptyRequest) (*onboarding.GetCurrentOnboardingStageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentOnboardingStage not implemented")
}
func (UnimplementedFrontendServiceServer) VerifyAadhar(context.Context, *onboarding.AadharVerificationRequest) (*onboarding.AadharVerificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyAadhar not implemented")
}
func (UnimplementedFrontendServiceServer) mustEmbedUnimplementedFrontendServiceServer() {}

// UnsafeFrontendServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FrontendServiceServer will
// result in compilation errors.
type UnsafeFrontendServiceServer interface {
	mustEmbedUnimplementedFrontendServiceServer()
}

func RegisterFrontendServiceServer(s grpc.ServiceRegistrar, srv FrontendServiceServer) {
	s.RegisterService(&FrontendService_ServiceDesc, srv)
}

func _FrontendService_TriggerPhoneVerification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(onboarding.TriggerPhoneOTPVerificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendServiceServer).TriggerPhoneVerification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FrontendService_TriggerPhoneVerification_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendServiceServer).TriggerPhoneVerification(ctx, req.(*onboarding.TriggerPhoneOTPVerificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendService_TriggerPhoneOTPVerification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(onboarding.TriggerPhoneOTPVerificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendServiceServer).TriggerPhoneOTPVerification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FrontendService_TriggerPhoneOTPVerification_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendServiceServer).TriggerPhoneOTPVerification(ctx, req.(*onboarding.TriggerPhoneOTPVerificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendService_TriggerEmailVerification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(onboarding.TriggerEmailVerificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendServiceServer).TriggerEmailVerification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FrontendService_TriggerEmailVerification_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendServiceServer).TriggerEmailVerification(ctx, req.(*onboarding.TriggerEmailVerificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendService_TriggerPanVerification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(onboarding.TriggerPanVerificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendServiceServer).TriggerPanVerification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FrontendService_TriggerPanVerification_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendServiceServer).TriggerPanVerification(ctx, req.(*onboarding.TriggerPanVerificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendService_TriggerLivenessCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(onboarding.TriggerLivenessCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendServiceServer).TriggerLivenessCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FrontendService_TriggerLivenessCheck_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendServiceServer).TriggerLivenessCheck(ctx, req.(*onboarding.TriggerLivenessCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendService_GetCurrentOnboardingStage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(generic.EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendServiceServer).GetCurrentOnboardingStage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FrontendService_GetCurrentOnboardingStage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendServiceServer).GetCurrentOnboardingStage(ctx, req.(*generic.EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendService_VerifyAadhar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(onboarding.AadharVerificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendServiceServer).VerifyAadhar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FrontendService_VerifyAadhar_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendServiceServer).VerifyAadhar(ctx, req.(*onboarding.AadharVerificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FrontendService_ServiceDesc is the grpc.ServiceDesc for FrontendService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FrontendService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "frontend.FrontendService",
	HandlerType: (*FrontendServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TriggerPhoneVerification",
			Handler:    _FrontendService_TriggerPhoneVerification_Handler,
		},
		{
			MethodName: "TriggerPhoneOTPVerification",
			Handler:    _FrontendService_TriggerPhoneOTPVerification_Handler,
		},
		{
			MethodName: "TriggerEmailVerification",
			Handler:    _FrontendService_TriggerEmailVerification_Handler,
		},
		{
			MethodName: "TriggerPanVerification",
			Handler:    _FrontendService_TriggerPanVerification_Handler,
		},
		{
			MethodName: "TriggerLivenessCheck",
			Handler:    _FrontendService_TriggerLivenessCheck_Handler,
		},
		{
			MethodName: "GetCurrentOnboardingStage",
			Handler:    _FrontendService_GetCurrentOnboardingStage_Handler,
		},
		{
			MethodName: "VerifyAadhar",
			Handler:    _FrontendService_VerifyAadhar_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos-frontend/frontend/frontend_service.proto",
}
