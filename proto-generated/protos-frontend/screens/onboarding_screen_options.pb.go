// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.0
// source: protos-frontend/screens/onboarding_screen_options.proto

package screens

import (
	core "Rinnegan/proto-generated/core"
	enums "Rinnegan/proto-generated/protos-frontend/enums"
	ui "Rinnegan/proto-generated/protos-frontend/ui"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OtherConsentsScreen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespHeader *core.ResponseHeader `protobuf:"bytes,1,opt,name=resp_header,json=respHeader,proto3" json:"resp_header,omitempty"`
	// Image to display on the permission screen
	PermissionImage *ui.Image `protobuf:"bytes,2,opt,name=permission_image,json=permissionImage,proto3" json:"permission_image,omitempty"`
	// Header text to display on the permission screen
	PermissionHeader *ui.Text `protobuf:"bytes,3,opt,name=permission_header,json=permissionHeader,proto3" json:"permission_header,omitempty"`
	// Paragraph text to display on the permission screen
	PermissionParagraph *ui.Text `protobuf:"bytes,4,opt,name=permission_paragraph,json=permissionParagraph,proto3" json:"permission_paragraph,omitempty"`
	// Notifications consent component
	NotificationsConsent *ui.NotificationsConsent `protobuf:"bytes,5,opt,name=notifications_consent,json=notificationsConsent,proto3" json:"notifications_consent,omitempty"`
	// Location consent component
	LocationConsent *ui.LocationConsent `protobuf:"bytes,6,opt,name=location_consent,json=locationConsent,proto3" json:"location_consent,omitempty"`
	// Next button component
	NextButton *ui.Button `protobuf:"bytes,7,opt,name=next_button,json=nextButton,proto3" json:"next_button,omitempty"`
	// Agreement checkbox component
	AgreementCheckbox *ui.CheckBox `protobuf:"bytes,8,opt,name=agreement_checkbox,json=agreementCheckbox,proto3" json:"agreement_checkbox,omitempty"`
	// Alert modal component
	AlertModal *ui.Modal `protobuf:"bytes,9,opt,name=alert_modal,json=alertModal,proto3" json:"alert_modal,omitempty"`
	// Error type (if any)
	Error enums.ErrorType `protobuf:"varint,10,opt,name=error,proto3,enum=enums.ErrorType" json:"error,omitempty"`
}

func (x *OtherConsentsScreen) Reset() {
	*x = OtherConsentsScreen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtherConsentsScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtherConsentsScreen) ProtoMessage() {}

func (x *OtherConsentsScreen) ProtoReflect() protoreflect.Message {
	mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtherConsentsScreen.ProtoReflect.Descriptor instead.
func (*OtherConsentsScreen) Descriptor() ([]byte, []int) {
	return file_protos_frontend_screens_onboarding_screen_options_proto_rawDescGZIP(), []int{0}
}

func (x *OtherConsentsScreen) GetRespHeader() *core.ResponseHeader {
	if x != nil {
		return x.RespHeader
	}
	return nil
}

func (x *OtherConsentsScreen) GetPermissionImage() *ui.Image {
	if x != nil {
		return x.PermissionImage
	}
	return nil
}

func (x *OtherConsentsScreen) GetPermissionHeader() *ui.Text {
	if x != nil {
		return x.PermissionHeader
	}
	return nil
}

func (x *OtherConsentsScreen) GetPermissionParagraph() *ui.Text {
	if x != nil {
		return x.PermissionParagraph
	}
	return nil
}

func (x *OtherConsentsScreen) GetNotificationsConsent() *ui.NotificationsConsent {
	if x != nil {
		return x.NotificationsConsent
	}
	return nil
}

func (x *OtherConsentsScreen) GetLocationConsent() *ui.LocationConsent {
	if x != nil {
		return x.LocationConsent
	}
	return nil
}

func (x *OtherConsentsScreen) GetNextButton() *ui.Button {
	if x != nil {
		return x.NextButton
	}
	return nil
}

func (x *OtherConsentsScreen) GetAgreementCheckbox() *ui.CheckBox {
	if x != nil {
		return x.AgreementCheckbox
	}
	return nil
}

func (x *OtherConsentsScreen) GetAlertModal() *ui.Modal {
	if x != nil {
		return x.AlertModal
	}
	return nil
}

func (x *OtherConsentsScreen) GetError() enums.ErrorType {
	if x != nil {
		return x.Error
	}
	return enums.ErrorType(0)
}

type BiometricConsentScreen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespHeader    *core.ResponseHeader `protobuf:"bytes,1,opt,name=resp_header,json=respHeader,proto3" json:"resp_header,omitempty"`
	TopImage      *ui.Image            `protobuf:"bytes,2,opt,name=top_image,json=topImage,proto3" json:"top_image,omitempty"`
	Header        *ui.Text             `protobuf:"bytes,3,opt,name=header,proto3" json:"header,omitempty"`
	TopText       *ui.Text             `protobuf:"bytes,4,opt,name=top_text,json=topText,proto3" json:"top_text,omitempty"`
	LockIcon      *ui.Image            `protobuf:"bytes,5,opt,name=lock_icon,json=lockIcon,proto3" json:"lock_icon,omitempty"`
	ParagraphText *ui.Text             `protobuf:"bytes,6,opt,name=paragraph_text,json=paragraphText,proto3" json:"paragraph_text,omitempty"`
	PrimaryButton *ui.Button           `protobuf:"bytes,7,opt,name=primary_button,json=primaryButton,proto3" json:"primary_button,omitempty"`
	ErrorCode     enums.ErrorType      `protobuf:"varint,8,opt,name=error_code,json=errorCode,proto3,enum=enums.ErrorType" json:"error_code,omitempty"`
}

func (x *BiometricConsentScreen) Reset() {
	*x = BiometricConsentScreen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiometricConsentScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiometricConsentScreen) ProtoMessage() {}

func (x *BiometricConsentScreen) ProtoReflect() protoreflect.Message {
	mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiometricConsentScreen.ProtoReflect.Descriptor instead.
func (*BiometricConsentScreen) Descriptor() ([]byte, []int) {
	return file_protos_frontend_screens_onboarding_screen_options_proto_rawDescGZIP(), []int{1}
}

func (x *BiometricConsentScreen) GetRespHeader() *core.ResponseHeader {
	if x != nil {
		return x.RespHeader
	}
	return nil
}

func (x *BiometricConsentScreen) GetTopImage() *ui.Image {
	if x != nil {
		return x.TopImage
	}
	return nil
}

func (x *BiometricConsentScreen) GetHeader() *ui.Text {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *BiometricConsentScreen) GetTopText() *ui.Text {
	if x != nil {
		return x.TopText
	}
	return nil
}

func (x *BiometricConsentScreen) GetLockIcon() *ui.Image {
	if x != nil {
		return x.LockIcon
	}
	return nil
}

func (x *BiometricConsentScreen) GetParagraphText() *ui.Text {
	if x != nil {
		return x.ParagraphText
	}
	return nil
}

func (x *BiometricConsentScreen) GetPrimaryButton() *ui.Button {
	if x != nil {
		return x.PrimaryButton
	}
	return nil
}

func (x *BiometricConsentScreen) GetErrorCode() enums.ErrorType {
	if x != nil {
		return x.ErrorCode
	}
	return enums.ErrorType(0)
}

type LivenessCheckScreen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespHeader *core.ResponseHeader `protobuf:"bytes,1,opt,name=resp_header,json=respHeader,proto3" json:"resp_header,omitempty"`
	OtpToShow  string               `protobuf:"bytes,2,opt,name=otp_to_show,json=otpToShow,proto3" json:"otp_to_show,omitempty"`
	NextButton *ui.Button           `protobuf:"bytes,3,opt,name=next_button,json=nextButton,proto3" json:"next_button,omitempty"`
}

func (x *LivenessCheckScreen) Reset() {
	*x = LivenessCheckScreen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LivenessCheckScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivenessCheckScreen) ProtoMessage() {}

func (x *LivenessCheckScreen) ProtoReflect() protoreflect.Message {
	mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivenessCheckScreen.ProtoReflect.Descriptor instead.
func (*LivenessCheckScreen) Descriptor() ([]byte, []int) {
	return file_protos_frontend_screens_onboarding_screen_options_proto_rawDescGZIP(), []int{2}
}

func (x *LivenessCheckScreen) GetRespHeader() *core.ResponseHeader {
	if x != nil {
		return x.RespHeader
	}
	return nil
}

func (x *LivenessCheckScreen) GetOtpToShow() string {
	if x != nil {
		return x.OtpToShow
	}
	return ""
}

func (x *LivenessCheckScreen) GetNextButton() *ui.Button {
	if x != nil {
		return x.NextButton
	}
	return nil
}

type PanVerificationScreen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespHeader                   *core.ResponseHeader   `protobuf:"bytes,1,opt,name=resp_header,json=respHeader,proto3" json:"resp_header,omitempty"`
	ImageUrl                     string                 `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Title                        string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description                  string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	PanNumber                    string                 `protobuf:"bytes,5,opt,name=pan_number,json=panNumber,proto3" json:"pan_number,omitempty"`
	DateOfBirth                  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	DetailsStoragePermissionText string                 `protobuf:"bytes,7,opt,name=details_storage_permission_text,json=detailsStoragePermissionText,proto3" json:"details_storage_permission_text,omitempty"`
	InfoUsagePermissionText      string                 `protobuf:"bytes,8,opt,name=info_usage_permission_text,json=infoUsagePermissionText,proto3" json:"info_usage_permission_text,omitempty"`
	NextButton                   *ui.Button             `protobuf:"bytes,9,opt,name=next_button,json=nextButton,proto3" json:"next_button,omitempty"`
	NoPanText                    string                 `protobuf:"bytes,10,opt,name=no_pan_text,json=noPanText,proto3" json:"no_pan_text,omitempty"`
}

func (x *PanVerificationScreen) Reset() {
	*x = PanVerificationScreen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PanVerificationScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PanVerificationScreen) ProtoMessage() {}

func (x *PanVerificationScreen) ProtoReflect() protoreflect.Message {
	mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PanVerificationScreen.ProtoReflect.Descriptor instead.
func (*PanVerificationScreen) Descriptor() ([]byte, []int) {
	return file_protos_frontend_screens_onboarding_screen_options_proto_rawDescGZIP(), []int{3}
}

func (x *PanVerificationScreen) GetRespHeader() *core.ResponseHeader {
	if x != nil {
		return x.RespHeader
	}
	return nil
}

func (x *PanVerificationScreen) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *PanVerificationScreen) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PanVerificationScreen) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PanVerificationScreen) GetPanNumber() string {
	if x != nil {
		return x.PanNumber
	}
	return ""
}

func (x *PanVerificationScreen) GetDateOfBirth() *timestamppb.Timestamp {
	if x != nil {
		return x.DateOfBirth
	}
	return nil
}

func (x *PanVerificationScreen) GetDetailsStoragePermissionText() string {
	if x != nil {
		return x.DetailsStoragePermissionText
	}
	return ""
}

func (x *PanVerificationScreen) GetInfoUsagePermissionText() string {
	if x != nil {
		return x.InfoUsagePermissionText
	}
	return ""
}

func (x *PanVerificationScreen) GetNextButton() *ui.Button {
	if x != nil {
		return x.NextButton
	}
	return nil
}

func (x *PanVerificationScreen) GetNoPanText() string {
	if x != nil {
		return x.NoPanText
	}
	return ""
}

type PhoneVerificationScreen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespHeader          *core.ResponseHeader `protobuf:"bytes,1,opt,name=resp_header,json=respHeader,proto3" json:"resp_header,omitempty"`
	Title               *ui.Text             `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	SubTitle            string               `protobuf:"bytes,3,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	PhoneNumberHeading  string               `protobuf:"bytes,4,opt,name=phone_number_heading,json=phoneNumberHeading,proto3" json:"phone_number_heading,omitempty"`
	InputNumber         string               `protobuf:"bytes,5,opt,name=input_number,json=inputNumber,proto3" json:"input_number,omitempty"`
	PhoneNumberBriefing string               `protobuf:"bytes,6,opt,name=phone_number_briefing,json=phoneNumberBriefing,proto3" json:"phone_number_briefing,omitempty"`
	Img1Url             string               `protobuf:"bytes,7,opt,name=img1_url,json=img1Url,proto3" json:"img1_url,omitempty"`
	PrimaryButton       *ui.Button           `protobuf:"bytes,8,opt,name=primary_button,json=primaryButton,proto3" json:"primary_button,omitempty"`
}

func (x *PhoneVerificationScreen) Reset() {
	*x = PhoneVerificationScreen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneVerificationScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneVerificationScreen) ProtoMessage() {}

func (x *PhoneVerificationScreen) ProtoReflect() protoreflect.Message {
	mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneVerificationScreen.ProtoReflect.Descriptor instead.
func (*PhoneVerificationScreen) Descriptor() ([]byte, []int) {
	return file_protos_frontend_screens_onboarding_screen_options_proto_rawDescGZIP(), []int{4}
}

func (x *PhoneVerificationScreen) GetRespHeader() *core.ResponseHeader {
	if x != nil {
		return x.RespHeader
	}
	return nil
}

func (x *PhoneVerificationScreen) GetTitle() *ui.Text {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *PhoneVerificationScreen) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *PhoneVerificationScreen) GetPhoneNumberHeading() string {
	if x != nil {
		return x.PhoneNumberHeading
	}
	return ""
}

func (x *PhoneVerificationScreen) GetInputNumber() string {
	if x != nil {
		return x.InputNumber
	}
	return ""
}

func (x *PhoneVerificationScreen) GetPhoneNumberBriefing() string {
	if x != nil {
		return x.PhoneNumberBriefing
	}
	return ""
}

func (x *PhoneVerificationScreen) GetImg1Url() string {
	if x != nil {
		return x.Img1Url
	}
	return ""
}

func (x *PhoneVerificationScreen) GetPrimaryButton() *ui.Button {
	if x != nil {
		return x.PrimaryButton
	}
	return nil
}

type PhoneOTPScreen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespHeader     *core.ResponseHeader `protobuf:"bytes,1,opt,name=resp_header,json=respHeader,proto3" json:"resp_header,omitempty"`
	Title          string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description    string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	WaitText       string               `protobuf:"bytes,4,opt,name=wait_text,json=waitText,proto3" json:"wait_text,omitempty"`
	TimerInSeconds int32                `protobuf:"varint,5,opt,name=timer_in_seconds,json=timerInSeconds,proto3" json:"timer_in_seconds,omitempty"`
	ResendOtpText  string               `protobuf:"bytes,6,opt,name=resend_otp_text,json=resendOtpText,proto3" json:"resend_otp_text,omitempty"`
	PrimaryButton  *ui.Button           `protobuf:"bytes,7,opt,name=primary_button,json=primaryButton,proto3" json:"primary_button,omitempty"`
}

func (x *PhoneOTPScreen) Reset() {
	*x = PhoneOTPScreen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneOTPScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneOTPScreen) ProtoMessage() {}

func (x *PhoneOTPScreen) ProtoReflect() protoreflect.Message {
	mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneOTPScreen.ProtoReflect.Descriptor instead.
func (*PhoneOTPScreen) Descriptor() ([]byte, []int) {
	return file_protos_frontend_screens_onboarding_screen_options_proto_rawDescGZIP(), []int{5}
}

func (x *PhoneOTPScreen) GetRespHeader() *core.ResponseHeader {
	if x != nil {
		return x.RespHeader
	}
	return nil
}

func (x *PhoneOTPScreen) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PhoneOTPScreen) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PhoneOTPScreen) GetWaitText() string {
	if x != nil {
		return x.WaitText
	}
	return ""
}

func (x *PhoneOTPScreen) GetTimerInSeconds() int32 {
	if x != nil {
		return x.TimerInSeconds
	}
	return 0
}

func (x *PhoneOTPScreen) GetResendOtpText() string {
	if x != nil {
		return x.ResendOtpText
	}
	return ""
}

func (x *PhoneOTPScreen) GetPrimaryButton() *ui.Button {
	if x != nil {
		return x.PrimaryButton
	}
	return nil
}

type EmailVerificationScreen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespHeader    *core.ResponseHeader `protobuf:"bytes,1,opt,name=resp_header,json=respHeader,proto3" json:"resp_header,omitempty"`
	Title         string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	SubTitle      string               `protobuf:"bytes,3,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	PrimaryButton *ui.Button           `protobuf:"bytes,4,opt,name=primary_button,json=primaryButton,proto3" json:"primary_button,omitempty"`
	ImgUrl        string               `protobuf:"bytes,5,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
}

func (x *EmailVerificationScreen) Reset() {
	*x = EmailVerificationScreen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailVerificationScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailVerificationScreen) ProtoMessage() {}

func (x *EmailVerificationScreen) ProtoReflect() protoreflect.Message {
	mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailVerificationScreen.ProtoReflect.Descriptor instead.
func (*EmailVerificationScreen) Descriptor() ([]byte, []int) {
	return file_protos_frontend_screens_onboarding_screen_options_proto_rawDescGZIP(), []int{6}
}

func (x *EmailVerificationScreen) GetRespHeader() *core.ResponseHeader {
	if x != nil {
		return x.RespHeader
	}
	return nil
}

func (x *EmailVerificationScreen) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EmailVerificationScreen) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *EmailVerificationScreen) GetPrimaryButton() *ui.Button {
	if x != nil {
		return x.PrimaryButton
	}
	return nil
}

func (x *EmailVerificationScreen) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

type TermsConditionsScreen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopImage            *ui.Image                `protobuf:"bytes,1,opt,name=top_image,json=topImage,proto3" json:"top_image,omitempty"`
	Title               *ui.Text                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle            *ui.Text                 `protobuf:"bytes,3,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	HorizontalComponent []*ui.HorizontalIconText `protobuf:"bytes,4,rep,name=horizontal_component,json=horizontalComponent,proto3" json:"horizontal_component,omitempty"`
	NextButton          *ui.Button               `protobuf:"bytes,5,opt,name=next_button,json=nextButton,proto3" json:"next_button,omitempty"`
	AgreementCheckbox   *ui.CheckBox             `protobuf:"bytes,6,opt,name=agreement_checkbox,json=agreementCheckbox,proto3" json:"agreement_checkbox,omitempty"`
	DataSharingCheckbox *ui.CheckBox             `protobuf:"bytes,7,opt,name=data_sharing_checkbox,json=dataSharingCheckbox,proto3" json:"data_sharing_checkbox,omitempty"`
	AlertModal          *ui.Modal                `protobuf:"bytes,8,opt,name=alert_modal,json=alertModal,proto3" json:"alert_modal,omitempty"`
}

func (x *TermsConditionsScreen) Reset() {
	*x = TermsConditionsScreen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TermsConditionsScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TermsConditionsScreen) ProtoMessage() {}

func (x *TermsConditionsScreen) ProtoReflect() protoreflect.Message {
	mi := &file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TermsConditionsScreen.ProtoReflect.Descriptor instead.
func (*TermsConditionsScreen) Descriptor() ([]byte, []int) {
	return file_protos_frontend_screens_onboarding_screen_options_proto_rawDescGZIP(), []int{7}
}

func (x *TermsConditionsScreen) GetTopImage() *ui.Image {
	if x != nil {
		return x.TopImage
	}
	return nil
}

func (x *TermsConditionsScreen) GetTitle() *ui.Text {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *TermsConditionsScreen) GetSubtitle() *ui.Text {
	if x != nil {
		return x.Subtitle
	}
	return nil
}

func (x *TermsConditionsScreen) GetHorizontalComponent() []*ui.HorizontalIconText {
	if x != nil {
		return x.HorizontalComponent
	}
	return nil
}

func (x *TermsConditionsScreen) GetNextButton() *ui.Button {
	if x != nil {
		return x.NextButton
	}
	return nil
}

func (x *TermsConditionsScreen) GetAgreementCheckbox() *ui.CheckBox {
	if x != nil {
		return x.AgreementCheckbox
	}
	return nil
}

func (x *TermsConditionsScreen) GetDataSharingCheckbox() *ui.CheckBox {
	if x != nil {
		return x.DataSharingCheckbox
	}
	return nil
}

func (x *TermsConditionsScreen) GetAlertModal() *ui.Modal {
	if x != nil {
		return x.AlertModal
	}
	return nil
}

var File_protos_frontend_screens_onboarding_screen_options_proto protoreflect.FileDescriptor

var file_protos_frontend_screens_onboarding_screen_options_proto_rawDesc = []byte{
	0x0a, 0x37, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2d, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x2f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x2f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x73, 0x1a, 0x12, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2d, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x75, 0x69, 0x2f, 0x54, 0x65, 0x78, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2d, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x75, 0x69, 0x2f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2d, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x75, 0x69, 0x2f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2d, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x75, 0x69, 0x2f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2d, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f,
	0x75, 0x69, 0x2f, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2d, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x2f, 0x75, 0x69, 0x2f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6f, 0x78, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2d, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x2f, 0x75, 0x69, 0x2f, 0x4d, 0x6f, 0x64, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2d, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2d, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x2f, 0x75, 0x69, 0x2f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x69,
	0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3,
	0x04, 0x0a, 0x13, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x73,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x35, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a,
	0x10, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75, 0x69, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x75, 0x69, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x10, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x14, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x75, 0x69, 0x2e, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x13, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0x4d, 0x0a, 0x15, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x69, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74,
	0x52, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x75, 0x69, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x62,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69,
	0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x12, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x75, 0x69, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6f, 0x78, 0x52, 0x11, 0x61,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78,
	0x12, 0x2a, 0x0a, 0x0b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x61, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x61, 0x6c,
	0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0xfb, 0x02, 0x0a, 0x16, 0x42, 0x69, 0x6f, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12,
	0x35, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x70,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75, 0x69, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x75, 0x69, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x23, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x75, 0x69, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x54, 0x65, 0x78, 0x74, 0x12, 0x26, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75, 0x69, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x2f, 0x0a,
	0x0e, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x75, 0x69, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x0d, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x31,
	0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x2e, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x12, 0x2f, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x35, 0x0a, 0x0b, 0x72, 0x65,
	0x73, 0x70, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x74, 0x70, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x74, 0x70, 0x54, 0x6f, 0x53, 0x68, 0x6f,
	0x77, 0x12, 0x2b, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x2e, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22, 0xd3,
	0x03, 0x0a, 0x15, 0x50, 0x61, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x35, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x70,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x6e, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69,
	0x72, 0x74, 0x68, 0x12, 0x45, 0x0a, 0x1f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17,
	0x69, 0x6e, 0x66, 0x6f, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2b, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75,
	0x69, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x6f, 0x5f, 0x70, 0x61, 0x6e, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x50, 0x61, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x22, 0xe4, 0x02, 0x0a, 0x17, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x12, 0x35, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x75, 0x69, 0x2e, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x48,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x69, 0x65, 0x66, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x6d, 0x67, 0x31, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x6d, 0x67, 0x31, 0x55, 0x72, 0x6c, 0x12, 0x31, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x75, 0x69, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x0d, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22, 0xa1, 0x02, 0x0a, 0x0e,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4f, 0x54, 0x50, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x35,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x70, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x77, 0x61, 0x69, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6f,
	0x74, 0x70, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x64, 0x4f, 0x74, 0x70, 0x54, 0x65, 0x78, 0x74, 0x12, 0x31, 0x0a, 0x0e,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22,
	0xcf, 0x01, 0x0a, 0x17, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x35, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x70, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x75, 0x69, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72,
	0x6c, 0x22, 0xa8, 0x03, 0x0a, 0x15, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x09, 0x74,
	0x6f, 0x70, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x75, 0x69, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x75, 0x69, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x75, 0x69, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x49, 0x0a, 0x14, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x69, 0x2e, 0x48, 0x6f, 0x72,
	0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x13, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x2e, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x12, 0x3b, 0x0a, 0x12, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x75, 0x69, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6f, 0x78, 0x52, 0x11, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x12, 0x40,
	0x0a, 0x15, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x75, 0x69, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6f, 0x78, 0x52, 0x13, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78,
	0x12, 0x2a, 0x0a, 0x0b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x61, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x75, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x61, 0x6c,
	0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x61, 0x6c, 0x42, 0x32, 0x5a, 0x30,
	0x52, 0x69, 0x6e, 0x6e, 0x65, 0x67, 0x61, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2d,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_frontend_screens_onboarding_screen_options_proto_rawDescOnce sync.Once
	file_protos_frontend_screens_onboarding_screen_options_proto_rawDescData = file_protos_frontend_screens_onboarding_screen_options_proto_rawDesc
)

func file_protos_frontend_screens_onboarding_screen_options_proto_rawDescGZIP() []byte {
	file_protos_frontend_screens_onboarding_screen_options_proto_rawDescOnce.Do(func() {
		file_protos_frontend_screens_onboarding_screen_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_frontend_screens_onboarding_screen_options_proto_rawDescData)
	})
	return file_protos_frontend_screens_onboarding_screen_options_proto_rawDescData
}

var file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_protos_frontend_screens_onboarding_screen_options_proto_goTypes = []interface{}{
	(*OtherConsentsScreen)(nil),     // 0: screens.OtherConsentsScreen
	(*BiometricConsentScreen)(nil),  // 1: screens.BiometricConsentScreen
	(*LivenessCheckScreen)(nil),     // 2: screens.LivenessCheckScreen
	(*PanVerificationScreen)(nil),   // 3: screens.PanVerificationScreen
	(*PhoneVerificationScreen)(nil), // 4: screens.PhoneVerificationScreen
	(*PhoneOTPScreen)(nil),          // 5: screens.PhoneOTPScreen
	(*EmailVerificationScreen)(nil), // 6: screens.EmailVerificationScreen
	(*TermsConditionsScreen)(nil),   // 7: screens.TermsConditionsScreen
	(*core.ResponseHeader)(nil),     // 8: core.ResponseHeader
	(*ui.Image)(nil),                // 9: ui.Image
	(*ui.Text)(nil),                 // 10: ui.Text
	(*ui.NotificationsConsent)(nil), // 11: ui.NotificationsConsent
	(*ui.LocationConsent)(nil),      // 12: ui.LocationConsent
	(*ui.Button)(nil),               // 13: ui.Button
	(*ui.CheckBox)(nil),             // 14: ui.CheckBox
	(*ui.Modal)(nil),                // 15: ui.Modal
	(enums.ErrorType)(0),            // 16: enums.ErrorType
	(*timestamppb.Timestamp)(nil),   // 17: google.protobuf.Timestamp
	(*ui.HorizontalIconText)(nil),   // 18: ui.HorizontalIconText
}
var file_protos_frontend_screens_onboarding_screen_options_proto_depIdxs = []int32{
	8,  // 0: screens.OtherConsentsScreen.resp_header:type_name -> core.ResponseHeader
	9,  // 1: screens.OtherConsentsScreen.permission_image:type_name -> ui.Image
	10, // 2: screens.OtherConsentsScreen.permission_header:type_name -> ui.Text
	10, // 3: screens.OtherConsentsScreen.permission_paragraph:type_name -> ui.Text
	11, // 4: screens.OtherConsentsScreen.notifications_consent:type_name -> ui.NotificationsConsent
	12, // 5: screens.OtherConsentsScreen.location_consent:type_name -> ui.LocationConsent
	13, // 6: screens.OtherConsentsScreen.next_button:type_name -> ui.Button
	14, // 7: screens.OtherConsentsScreen.agreement_checkbox:type_name -> ui.CheckBox
	15, // 8: screens.OtherConsentsScreen.alert_modal:type_name -> ui.Modal
	16, // 9: screens.OtherConsentsScreen.error:type_name -> enums.ErrorType
	8,  // 10: screens.BiometricConsentScreen.resp_header:type_name -> core.ResponseHeader
	9,  // 11: screens.BiometricConsentScreen.top_image:type_name -> ui.Image
	10, // 12: screens.BiometricConsentScreen.header:type_name -> ui.Text
	10, // 13: screens.BiometricConsentScreen.top_text:type_name -> ui.Text
	9,  // 14: screens.BiometricConsentScreen.lock_icon:type_name -> ui.Image
	10, // 15: screens.BiometricConsentScreen.paragraph_text:type_name -> ui.Text
	13, // 16: screens.BiometricConsentScreen.primary_button:type_name -> ui.Button
	16, // 17: screens.BiometricConsentScreen.error_code:type_name -> enums.ErrorType
	8,  // 18: screens.LivenessCheckScreen.resp_header:type_name -> core.ResponseHeader
	13, // 19: screens.LivenessCheckScreen.next_button:type_name -> ui.Button
	8,  // 20: screens.PanVerificationScreen.resp_header:type_name -> core.ResponseHeader
	17, // 21: screens.PanVerificationScreen.date_of_birth:type_name -> google.protobuf.Timestamp
	13, // 22: screens.PanVerificationScreen.next_button:type_name -> ui.Button
	8,  // 23: screens.PhoneVerificationScreen.resp_header:type_name -> core.ResponseHeader
	10, // 24: screens.PhoneVerificationScreen.title:type_name -> ui.Text
	13, // 25: screens.PhoneVerificationScreen.primary_button:type_name -> ui.Button
	8,  // 26: screens.PhoneOTPScreen.resp_header:type_name -> core.ResponseHeader
	13, // 27: screens.PhoneOTPScreen.primary_button:type_name -> ui.Button
	8,  // 28: screens.EmailVerificationScreen.resp_header:type_name -> core.ResponseHeader
	13, // 29: screens.EmailVerificationScreen.primary_button:type_name -> ui.Button
	9,  // 30: screens.TermsConditionsScreen.top_image:type_name -> ui.Image
	10, // 31: screens.TermsConditionsScreen.title:type_name -> ui.Text
	10, // 32: screens.TermsConditionsScreen.subtitle:type_name -> ui.Text
	18, // 33: screens.TermsConditionsScreen.horizontal_component:type_name -> ui.HorizontalIconText
	13, // 34: screens.TermsConditionsScreen.next_button:type_name -> ui.Button
	14, // 35: screens.TermsConditionsScreen.agreement_checkbox:type_name -> ui.CheckBox
	14, // 36: screens.TermsConditionsScreen.data_sharing_checkbox:type_name -> ui.CheckBox
	15, // 37: screens.TermsConditionsScreen.alert_modal:type_name -> ui.Modal
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_protos_frontend_screens_onboarding_screen_options_proto_init() }
func file_protos_frontend_screens_onboarding_screen_options_proto_init() {
	if File_protos_frontend_screens_onboarding_screen_options_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtherConsentsScreen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiometricConsentScreen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LivenessCheckScreen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PanVerificationScreen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneVerificationScreen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneOTPScreen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailVerificationScreen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TermsConditionsScreen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_frontend_screens_onboarding_screen_options_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_frontend_screens_onboarding_screen_options_proto_goTypes,
		DependencyIndexes: file_protos_frontend_screens_onboarding_screen_options_proto_depIdxs,
		MessageInfos:      file_protos_frontend_screens_onboarding_screen_options_proto_msgTypes,
	}.Build()
	File_protos_frontend_screens_onboarding_screen_options_proto = out.File
	file_protos_frontend_screens_onboarding_screen_options_proto_rawDesc = nil
	file_protos_frontend_screens_onboarding_screen_options_proto_goTypes = nil
	file_protos_frontend_screens_onboarding_screen_options_proto_depIdxs = nil
}
