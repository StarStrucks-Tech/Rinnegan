// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.0
// source: core/core-enums.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Platform int32

const (
	Platform_PLATFORM_NOT_DEFINED Platform = 0
	Platform_PLATFORM_ANDROID     Platform = 1
	Platform_PLATFORM_IOS         Platform = 2
	Platform_PLATFORM_WEB         Platform = 3
)

// Enum value maps for Platform.
var (
	Platform_name = map[int32]string{
		0: "PLATFORM_NOT_DEFINED",
		1: "PLATFORM_ANDROID",
		2: "PLATFORM_IOS",
		3: "PLATFORM_WEB",
	}
	Platform_value = map[string]int32{
		"PLATFORM_NOT_DEFINED": 0,
		"PLATFORM_ANDROID":     1,
		"PLATFORM_IOS":         2,
		"PLATFORM_WEB":         3,
	}
)

func (x Platform) Enum() *Platform {
	p := new(Platform)
	*p = x
	return p
}

func (x Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_core_core_enums_proto_enumTypes[0].Descriptor()
}

func (Platform) Type() protoreflect.EnumType {
	return &file_core_core_enums_proto_enumTypes[0]
}

func (x Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Platform.Descriptor instead.
func (Platform) EnumDescriptor() ([]byte, []int) {
	return file_core_core_enums_proto_rawDescGZIP(), []int{0}
}

type ResponseCode int32

const (
	// General
	// frontend will only be concerned about successful or failure from the server ,
	// anything on server side does not matter for the frontend server hence we can have only 3 cases to suffice frontend responses
	ResponseCode_RESPONSE_CODE_UNSPECIFIED ResponseCode = 0
	ResponseCode_RESPONSE_CODE_SUCCESS     ResponseCode = 1
	ResponseCode_RESPONSE_CODE_FAILED      ResponseCode = 2
	// Client Errors
	ResponseCode_RESPONSE_CODE_BAD_REQUEST            ResponseCode = 3  // Status Code : 400
	ResponseCode_RESPONSE_CODE_UNAUTHORIZED           ResponseCode = 4  // Status Code : 401
	ResponseCode_RESPONSE_CODE_FORBIDDEN              ResponseCode = 5  // Status Code : 403
	ResponseCode_RESPONSE_CODE_NOT_FOUND              ResponseCode = 6  // Status Code : 404
	ResponseCode_RESPONSE_CODE_METHOD_NOT_ALLOWED     ResponseCode = 7  // Status Code : 405
	ResponseCode_RESPONSE_CODE_CONFLICT               ResponseCode = 8  // Status Code : 409
	ResponseCode_RESPONSE_CODE_PAYLOAD_TOO_LARGE      ResponseCode = 9  // Status Code : 413
	ResponseCode_RESPONSE_CODE_UNSUPPORTED_MEDIA_TYPE ResponseCode = 10 // Status Code : 415
	ResponseCode_RESPONSE_CODE_UNPROCESSABLE_ENTITY   ResponseCode = 11 // Status Code : 422
	// Server Errors
	ResponseCode_RESPONSE_CODE_INTERNAL_SERVER_ERROR ResponseCode = 12 // Status Code : 500
	ResponseCode_RESPONSE_CODE_NOT_IMPLEMENTED       ResponseCode = 13 // Status Code : 501
	ResponseCode_RESPONSE_CODE_BAD_GATEWAY           ResponseCode = 14 // Status Code : 502
	ResponseCode_RESPONSE_CODE_SERVICE_UNAVAILABLE   ResponseCode = 15 // Status Code : 503
	ResponseCode_RESPONSE_CODE_GATEWAY_TIMEOUT       ResponseCode = 16 // Status Code : 504
	// Application-specific
	ResponseCode_RESPONSE_CODE_VALIDATION_ERROR    ResponseCode = 17 // Status Code : 1001
	ResponseCode_RESPONSE_CODE_RESOURCE_EXHAUSTED  ResponseCode = 18 // Status Code : 1002
	ResponseCode_RESPONSE_CODE_RATE_LIMIT_EXCEEDED ResponseCode = 19 // Status Code : 1003
	ResponseCode_RESPONSE_CODE_DEPRECATED_API      ResponseCode = 20 // Status Code : 1004
)

// Enum value maps for ResponseCode.
var (
	ResponseCode_name = map[int32]string{
		0:  "RESPONSE_CODE_UNSPECIFIED",
		1:  "RESPONSE_CODE_SUCCESS",
		2:  "RESPONSE_CODE_FAILED",
		3:  "RESPONSE_CODE_BAD_REQUEST",
		4:  "RESPONSE_CODE_UNAUTHORIZED",
		5:  "RESPONSE_CODE_FORBIDDEN",
		6:  "RESPONSE_CODE_NOT_FOUND",
		7:  "RESPONSE_CODE_METHOD_NOT_ALLOWED",
		8:  "RESPONSE_CODE_CONFLICT",
		9:  "RESPONSE_CODE_PAYLOAD_TOO_LARGE",
		10: "RESPONSE_CODE_UNSUPPORTED_MEDIA_TYPE",
		11: "RESPONSE_CODE_UNPROCESSABLE_ENTITY",
		12: "RESPONSE_CODE_INTERNAL_SERVER_ERROR",
		13: "RESPONSE_CODE_NOT_IMPLEMENTED",
		14: "RESPONSE_CODE_BAD_GATEWAY",
		15: "RESPONSE_CODE_SERVICE_UNAVAILABLE",
		16: "RESPONSE_CODE_GATEWAY_TIMEOUT",
		17: "RESPONSE_CODE_VALIDATION_ERROR",
		18: "RESPONSE_CODE_RESOURCE_EXHAUSTED",
		19: "RESPONSE_CODE_RATE_LIMIT_EXCEEDED",
		20: "RESPONSE_CODE_DEPRECATED_API",
	}
	ResponseCode_value = map[string]int32{
		"RESPONSE_CODE_UNSPECIFIED":            0,
		"RESPONSE_CODE_SUCCESS":                1,
		"RESPONSE_CODE_FAILED":                 2,
		"RESPONSE_CODE_BAD_REQUEST":            3,
		"RESPONSE_CODE_UNAUTHORIZED":           4,
		"RESPONSE_CODE_FORBIDDEN":              5,
		"RESPONSE_CODE_NOT_FOUND":              6,
		"RESPONSE_CODE_METHOD_NOT_ALLOWED":     7,
		"RESPONSE_CODE_CONFLICT":               8,
		"RESPONSE_CODE_PAYLOAD_TOO_LARGE":      9,
		"RESPONSE_CODE_UNSUPPORTED_MEDIA_TYPE": 10,
		"RESPONSE_CODE_UNPROCESSABLE_ENTITY":   11,
		"RESPONSE_CODE_INTERNAL_SERVER_ERROR":  12,
		"RESPONSE_CODE_NOT_IMPLEMENTED":        13,
		"RESPONSE_CODE_BAD_GATEWAY":            14,
		"RESPONSE_CODE_SERVICE_UNAVAILABLE":    15,
		"RESPONSE_CODE_GATEWAY_TIMEOUT":        16,
		"RESPONSE_CODE_VALIDATION_ERROR":       17,
		"RESPONSE_CODE_RESOURCE_EXHAUSTED":     18,
		"RESPONSE_CODE_RATE_LIMIT_EXCEEDED":    19,
		"RESPONSE_CODE_DEPRECATED_API":         20,
	}
)

func (x ResponseCode) Enum() *ResponseCode {
	p := new(ResponseCode)
	*p = x
	return p
}

func (x ResponseCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseCode) Descriptor() protoreflect.EnumDescriptor {
	return file_core_core_enums_proto_enumTypes[1].Descriptor()
}

func (ResponseCode) Type() protoreflect.EnumType {
	return &file_core_core_enums_proto_enumTypes[1]
}

func (x ResponseCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseCode.Descriptor instead.
func (ResponseCode) EnumDescriptor() ([]byte, []int) {
	return file_core_core_enums_proto_rawDescGZIP(), []int{1}
}

var File_core_core_enums_proto protoreflect.FileDescriptor

var file_core_core_enums_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2d, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x2a, 0x5e, 0x0a,
	0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x4c, 0x41,
	0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f,
	0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4c, 0x41,
	0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x49, 0x4f, 0x53, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x50,
	0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x57, 0x45, 0x42, 0x10, 0x03, 0x2a, 0xdc, 0x05,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x19, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a,
	0x15, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10,
	0x04, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x42, 0x49, 0x44, 0x44, 0x45, 0x4e, 0x10, 0x05, 0x12, 0x1b,
	0x0a, 0x17, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x06, 0x12, 0x24, 0x0a, 0x20, 0x52,
	0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x45, 0x54,
	0x48, 0x4f, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x10,
	0x07, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54, 0x10, 0x08, 0x12, 0x23, 0x0a,
	0x1f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50,
	0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45,
	0x10, 0x09, 0x12, 0x28, 0x0a, 0x24, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f,
	0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x0a, 0x12, 0x26, 0x0a, 0x22,
	0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e,
	0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49,
	0x54, 0x59, 0x10, 0x0b, 0x12, 0x27, 0x0a, 0x23, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53,
	0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x0c, 0x12, 0x21, 0x0a,
	0x1d, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x0d,
	0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x10, 0x0e, 0x12,
	0x25, 0x0a, 0x21, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x0f, 0x12, 0x21, 0x0a, 0x1d, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e,
	0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x5f,
	0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x10, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x11, 0x12, 0x24, 0x0a,
	0x20, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x45, 0x58, 0x48, 0x41, 0x55, 0x53, 0x54, 0x45,
	0x44, 0x10, 0x12, 0x12, 0x25, 0x0a, 0x21, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f,
	0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x13, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x50, 0x52,
	0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x50, 0x49, 0x10, 0x14, 0x42, 0x1f, 0x5a, 0x1d,
	0x52, 0x69, 0x6e, 0x6e, 0x65, 0x67, 0x61, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_core_core_enums_proto_rawDescOnce sync.Once
	file_core_core_enums_proto_rawDescData = file_core_core_enums_proto_rawDesc
)

func file_core_core_enums_proto_rawDescGZIP() []byte {
	file_core_core_enums_proto_rawDescOnce.Do(func() {
		file_core_core_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_core_enums_proto_rawDescData)
	})
	return file_core_core_enums_proto_rawDescData
}

var file_core_core_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_core_core_enums_proto_goTypes = []interface{}{
	(Platform)(0),     // 0: core.Platform
	(ResponseCode)(0), // 1: core.ResponseCode
}
var file_core_core_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_core_core_enums_proto_init() }
func file_core_core_enums_proto_init() {
	if File_core_core_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_core_enums_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_core_enums_proto_goTypes,
		DependencyIndexes: file_core_core_enums_proto_depIdxs,
		EnumInfos:         file_core_core_enums_proto_enumTypes,
	}.Build()
	File_core_core_enums_proto = out.File
	file_core_core_enums_proto_rawDesc = nil
	file_core_core_enums_proto_goTypes = nil
	file_core_core_enums_proto_depIdxs = nil
}
